// Generated file - do not edit!
// Source: html/portal.html
#ifndef GENERATED_HTML_PORTAL_H
#define GENERATED_HTML_PORTAL_H
#include <pgmspace.h>
static const char PORTAL_HTML[] PROGMEM = "<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"    <meta charset=\"UTF-8\">\n"
"    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n"
"    <title>ESP32 WiFi Setup</title>\n"
"    <style>\n"
"body { \n"
"    font-family: Arial, sans-serif; \n"
"    margin: 0; \n"
"    padding: 0; \n"
"    background-color: #f5f5f5; \n"
"    color: #333; \n"
"}\n"
".container { \n"
"    max-width: 800px; \n"
"    margin: 20px auto; \n"
"    padding: 20px; \n"
"    background-color: white; \n"
"    border-radius: 5px; \n"
"    box-shadow: 0 2px 5px rgba(0,0,0,0.1); \n"
"}\n"
"h1, h2 { color: #0066cc; }\n"
".header { \n"
"    background-color: #0066cc; \n"
"    color: white; \n"
"    padding: 10px 20px; \n"
"    text-align: center; \n"
"}\n"
".form-group { margin-bottom: 15px; }\n"
"label { \n"
"    display: block; \n"
"    margin-bottom: 5px; \n"
"    font-weight: bold; \n"
"}\n"
"input[type='text'], input[type='password'], select { \n"
"    width: 100%; \n"
"    padding: 8px; \n"
"    border: 1px solid #ddd; \n"
"    border-radius: 4px; \n"
"    box-sizing: border-box; \n"
"}\n"
".button-container { \n"
"    margin-top: 15px; \n"
"    text-align: center; \n"
"}\n"
".button { \n"
"    display: inline-block; \n"
"    padding: 10px 20px; \n"
"    background-color: #0066cc; \n"
"    color: white; \n"
"    text-decoration: none; \n"
"    border-radius: 4px; \n"
"    border: none; \n"
"    cursor: pointer; \n"
"}\n"
".button.secondary { background-color: #777; }\n"
".button:hover { background-color: #0055aa; }\n"
".button.secondary:hover { background-color: #666; }\n"
"footer { \n"
"    text-align: center; \n"
"    margin-top: 20px; \n"
"    color: #777; \n"
"    font-size: 0.8em; \n"
"}\n"
".network-list {\n"
"    max-height: 200px;\n"
"    overflow-y: auto;\n"
"    border: 1px solid #ddd;\n"
"    border-radius: 4px;\n"
"    margin-bottom: 15px;\n"
"}\n"
".network-item {\n"
"    padding: 8px 15px;\n"
"    border-bottom: 1px solid #eee;\n"
"    cursor: pointer;\n"
"}\n"
".network-item:hover {\n"
"    background-color: #f5f5f5;\n"
"}\n"
".network-item.selected {\n"
"    background-color: #e0f0ff;\n"
"}\n"
".signal-strength {\n"
"    float: right;\n"
"    font-size: 0.8em;\n"
"    color: #666;\n"
"}\n"
".lock-icon {\n"
"    margin-left: 5px;\n"
"}\n"
".success-icon {\n"
"    color: #28a745;\n"
"    font-size: 48px;\n"
"    text-align: center;\n"
"    margin: 20px 0;\n"
"}\n"
".progress {\n"
"    height: 4px;\n"
"    background-color: #e9ecef;\n"
"    border-radius: 2px;\n"
"    margin: 20px 0;\n"
"    overflow: hidden;\n"
"}\n"
".progress-bar {\n"
"    height: 100%;\n"
"    background-color: #0066cc;\n"
"    width: 0%;\n"
"    transition: width 10s linear;\n"
"}\n"
".hidden {\n"
"    display: none;\n"
"}\n"
"\n"
"</style>\n"
"    <script>\n"
"function showScreen(screenId) {\n"
"    const screens = ['config-screen', 'success-screen', 'error-screen'];\n"
"    screens.forEach(id => {\n"
"        document.getElementById(id).classList.add('hidden');\n"
"    });\n"
"    document.getElementById(screenId).classList.remove('hidden');\n"
"    \n"
"    // Update page title\n"
"    let title = \"DeskHog Configuration\";\n"
"    if (screenId === 'success-screen') title = \"Configuration Saved\";\n"
"    else if (screenId === 'error-screen') title = \"Configuration Error\";\n"
"    document.getElementById('page-title').textContent = title;\n"
"    \n"
"    // Start countdown if success screen\n"
"    if (screenId === 'success-screen') {\n"
"        startCountdown();\n"
"        document.getElementById('progress-bar').style.width = '100%';\n"
"    }\n"
"}\n"
"\n"
"// Handle WiFi form submission\n"
"function saveWifiConfig() {\n"
"    const form = document.getElementById('wifi-form');\n"
"    const formData = new FormData(form);\n"
"    \n"
"    fetch('/save-wifi', {\n"
"        method: 'POST',\n"
"        body: formData\n"
"    })\n"
"    .then(response => response.json())\n"
"    .then(data => {\n"
"        if (data.success) {\n"
"            showScreen('success-screen');\n"
"        } else {\n"
"            showScreen('error-screen');\n"
"        }\n"
"    })\n"
"    .catch(() => {\n"
"        showScreen('error-screen');\n"
"    });\n"
"    \n"
"    return false; // Prevent default form submission\n"
"}\n"
"\n"
"// Handle device config form submission\n"
"function saveDeviceConfig() {\n"
"    const form = document.getElementById('device-form');\n"
"    const formData = new FormData(form);\n"
"    \n"
"    fetch('/save-device-config', {\n"
"        method: 'POST',\n"
"        body: formData\n"
"    })\n"
"    .then(response => response.json())\n"
"    .then(data => {\n"
"        if (data.success) {\n"
"            showScreen('success-screen');\n"
"        } else {\n"
"            showScreen('error-screen');\n"
"        }\n"
"    })\n"
"    .catch(() => {\n"
"        showScreen('error-screen');\n"
"    });\n"
"    \n"
"    return false;\n"
"}\n"
"\n"
"// Toggle API key visibility\n"
"function toggleApiKeyVisibility() {\n"
"    const apiKeyInput = document.getElementById('apiKey');\n"
"    apiKeyInput.type = apiKeyInput.type === 'password' ? 'text' : 'password';\n"
"}\n"
"\n"
"// Add new insight\n"
"function addInsight() {\n"
"    const form = document.getElementById('insight-form');\n"
"    const formData = new FormData(form);\n"
"    \n"
"    fetch('/save-insight', {\n"
"        method: 'POST',\n"
"        body: formData\n"
"    })\n"
"    .then(response => response.json())\n"
"    .then(data => {\n"
"        if (data.success) {\n"
"            form.reset();\n"
"            loadInsights();\n"
"        } else {\n"
"            showScreen('error-screen');\n"
"        }\n"
"    })\n"
"    .catch(() => {\n"
"        showScreen('error-screen');\n"
"    });\n"
"    \n"
"    return false;\n"
"}\n"
"\n"
"// Delete insight\n"
"function deleteInsight(id) {\n"
"    if (!confirm('Are you sure you want to delete this insight?')) {\n"
"        return;\n"
"    }\n"
"    \n"
"    fetch('/delete-insight', {\n"
"        method: 'POST',\n"
"        headers: {\n"
"            'Content-Type': 'application/json',\n"
"        },\n"
"        body: JSON.stringify({ id: id })\n"
"    })\n"
"    .then(response => response.json())\n"
"    .then(data => {\n"
"        if (data.success) {\n"
"            loadInsights();\n"
"        } else {\n"
"            showScreen('error-screen');\n"
"        }\n"
"    })\n"
"    .catch(() => {\n"
"        showScreen('error-screen');\n"
"    });\n"
"}\n"
"\n"
"// Load insights list\n"
"function loadInsights() {\n"
"    fetch('/get-insights')\n"
"    .then(response => response.json())\n"
"    .then(data => {\n"
"        const container = document.getElementById('insights-list');\n"
"        container.innerHTML = '';\n"
"        \n"
"        if (data.insights.length === 0) {\n"
"            container.innerHTML = '<p>No insights configured</p>';\n"
"            return;\n"
"        }\n"
"        \n"
"        const list = document.createElement('ul');\n"
"        list.className = 'insights-list';\n"
"        \n"
"        data.insights.forEach(insight => {\n"
"            const item = document.createElement('li');\n"
"            item.className = 'insight-item';\n"
"            item.innerHTML = `\n"
"                <span class=\"insight-id\">${insight.id}</span>\n"
"                <button onclick=\"deleteInsight('${insight.id}')\" class=\"button danger\">Delete</button>\n"
"            `;\n"
"            list.appendChild(item);\n"
"        });\n"
"        \n"
"        container.appendChild(list);\n"
"    })\n"
"    .catch(error => {\n"
"        console.error('Error loading insights:', error);\n"
"    });\n"
"}\n"
"\n"
"// Refresh network list\n"
"function refreshNetworks() {\n"
"    fetch('/scan-networks')\n"
"    .then(response => response.text())\n"
"    .then(html => {\n"
"        document.getElementById('ssid').innerHTML = html;\n"
"    });\n"
"}\n"
"\n"
"// Start countdown on success screen\n"
"function startCountdown() {\n"
"    let seconds = 10;\n"
"    const countdownEl = document.getElementById('countdown');\n"
"    \n"
"    const interval = setInterval(() => {\n"
"        seconds--;\n"
"        countdownEl.textContent = seconds;\n"
"        \n"
"        if (seconds <= 0) {\n"
"            clearInterval(interval);\n"
"            window.location.href = '/';\n"
"        }\n"
"    }, 1000);\n"
"}\n"
"\n"
"// Load current configuration\n"
"function loadCurrentConfig() {\n"
"    fetch('/get-device-config')\n"
"    .then(response => response.json())\n"
"    .then(data => {\n"
"        if (data.teamId !== undefined) {\n"
"            document.getElementById('teamId').value = data.teamId;\n"
"        }\n"
"        if (data.apiKey) {\n"
"            document.getElementById('apiKey').value = data.apiKey;\n"
"        }\n"
"    })\n"
"    .catch(error => {\n"
"        console.error('Error loading device config:', error);\n"
"    });\n"
"}\n"
"\n"
"// Initialize page\n"
"document.addEventListener('DOMContentLoaded', function() {\n"
"    // Check if we need to show a specific screen based on URL hash\n"
"    const hash = window.location.hash.substr(1);\n"
"    if (hash && ['config-screen', 'success-screen', 'error-screen'].includes(hash)) {\n"
"        showScreen(hash);\n"
"    }\n"
"    \n"
"    // Load current configuration\n"
"    loadCurrentConfig();\n"
"    \n"
"    // Load insights list\n"
"    loadInsights();\n"
"});\n"
"</script>\n"
"</head>\n"
"<body>\n"
"    <div class=\"header\">\n"
"        <h1 id=\"page-title\">DeskHog Configuration</h1>\n"
"    </div>\n"
"    \n"
"    <!-- Configuration Screen -->\n"
"    <div id=\"config-screen\">\n"
"        <div class=\"config-section\">\n"
"            <h2>WiFi Configuration</h2>\n"
"            <p>Please select your WiFi network and enter the password if required.</p>\n"
"            \n"
"            <form id=\"wifi-form\" onsubmit=\"return saveWifiConfig()\">\n"
"                <div class=\"form-group\">\n"
"                    <label for=\"ssid\">WiFi Network:</label>\n"
"                    <select name=\"ssid\" id=\"ssid\" required>\n"
"                        <!-- NETWORK_LIST_PLACEHOLDER -->\n"
"                    </select>\n"
"                </div>\n"
"                \n"
"                <div class=\"form-group\">\n"
"                    <label for=\"password\">Password:</label>\n"
"                    <input type=\"password\" name=\"password\" id=\"password\">\n"
"                </div>\n"
"                \n"
"                <div class=\"button-container\">\n"
"                    <button type=\"submit\" class=\"button\">Save WiFi</button>\n"
"                </div>\n"
"            </form>\n"
"            \n"
"            <div class=\"button-container\" style=\"margin-top: 20px;\">\n"
"                <a href=\"javascript:refreshNetworks()\" class=\"button secondary\">Refresh Network List</a>\n"
"            </div>\n"
"        </div>\n"
"\n"
"        <div class=\"config-section\">\n"
"            <h2>Device Configuration</h2>\n"
"            <form id=\"device-form\" onsubmit=\"return saveDeviceConfig()\">\n"
"                <div class=\"form-group\">\n"
"                    <label for=\"teamId\">Team ID:</label>\n"
"                    <input type=\"number\" name=\"teamId\" id=\"teamId\" min=\"-1\" required>\n"
"                </div>\n"
"                \n"
"                <div class=\"form-group\">\n"
"                    <label for=\"apiKey\">API Key:</label>\n"
"                    <input type=\"password\" name=\"apiKey\" id=\"apiKey\">\n"
"                    <button type=\"button\" class=\"button secondary\" onclick=\"toggleApiKeyVisibility()\">Show/Hide</button>\n"
"                </div>\n"
"                \n"
"                <div class=\"button-container\">\n"
"                    <button type=\"submit\" class=\"button\">Save Device Config</button>\n"
"                </div>\n"
"            </form>\n"
"        </div>\n"
"\n"
"        <div class=\"config-section\">\n"
"            <h2>Insights Management</h2>\n"
"            <div id=\"insights-list\">\n"
"                <!-- Will be populated by JavaScript -->\n"
"            </div>\n"
"            \n"
"            <form id=\"insight-form\" onsubmit=\"return addInsight()\">\n"
"                <div class=\"form-group\">\n"
"                    <label for=\"insightId\">New Insight ID:</label>\n"
"                    <input type=\"text\" name=\"insightId\" id=\"insightId\" required>\n"
"                </div>\n"
"                \n"
"                <div class=\"form-group\">\n"
"                    <label for=\"insightContent\">Content:</label>\n"
"                    <textarea name=\"insightContent\" id=\"insightContent\" required></textarea>\n"
"                </div>\n"
"                \n"
"                <div class=\"button-container\">\n"
"                    <button type=\"submit\" class=\"button\">Add Insight</button>\n"
"                </div>\n"
"            </form>\n"
"        </div>\n"
"    </div>\n"
"    \n"
"    <!-- Success Screen -->\n"
"    <div id=\"success-screen\" class=\"container hidden\">\n"
"        <div class=\"success-icon\">✓</div>\n"
"        <h2>Configuration Saved</h2>\n"
"        <p>Your changes have been saved successfully.</p>\n"
"        <p>If you changed WiFi settings, the device will now attempt to connect to the new network.</p>\n"
"        \n"
"        <div class=\"progress\">\n"
"            <div id=\"progress-bar\" class=\"progress-bar\"></div>\n"
"        </div>\n"
"        \n"
"        <p>Redirecting in <span id=\"countdown\">10</span> seconds...</p>\n"
"    </div>\n"
"    \n"
"    <!-- Error Screen -->\n"
"    <div id=\"error-screen\" class=\"container hidden\">\n"
"        <h2>Error Saving Configuration</h2>\n"
"        <p>There was an error saving your configuration.</p>\n"
"        <p>Please try again.</p>\n"
"        \n"
"        <div class=\"button-container\">\n"
"            <a href=\"javascript:showScreen('config-screen')\" class=\"button\">Back</a>\n"
"        </div>\n"
"    </div>\n"
"    \n"
"    <footer>People who are really serious about software should make their own hardware. - Alan Kay</footer>\n"
"\n"
"</body>\n"
"</html>";
#endif // GENERATED_HTML_PORTAL_H
